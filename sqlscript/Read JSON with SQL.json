{
	"name": "Read JSON with SQL",
	"properties": {
		"folder": {
			"name": "Other"
		},
		"content": {
			"query": "DECLARE @json NVARCHAR(MAX);\nSET @json = N'[\n  {\"id\": 2, \"info\": {\"name\": \"John\", \"surname\": \"Smith\"}, \"age\": 25},\n  {\"id\": 5, \"info\": {\"name\": \"Jane\", \"surname\": \"Smith\"}, \"dob\": \"2005-11-04T12:00:00\"}\n]';\n\nSELECT *\nFROM OPENJSON(@json)\n  WITH (\n    id INT 'strict $.id',\n    firstName NVARCHAR(50) '$.info.name',\n    lastName NVARCHAR(50) '$.info.surname',\n    age INT,\n    dateOfBirth DATETIME2 '$.dob'\n  );\n\n\n  SELECT TOP 100\n    /*Scalar attributes extraction using JSON_VALUE*/\n      JSON_VALUE([jsonContent], '$.id') AS [id]\n    , JSON_VALUE([jsonContent], '$.first_name') AS [first_name]\n    , JSON_VALUE([jsonContent], '$.last_name') AS [last_name]\n    , JSON_VALUE([jsonContent], '$.email') AS [email]\n    , JSON_VALUE([jsonContent], '$.gender') AS [gender]\n    , JSON_VALUE([jsonContent], '$.ip_address') AS [ip_address]\n    , JSON_VALUE([jsonContent], '$.stores_purchased_at') AS [stores_purchased_at]\n    /*Scalar attributes extraction from a nested array of objects via OPENJSON and JSON_QUERY*/\n    , [NestedArray].[nested_record_id]\n    , [NestedArray].[nested_record_Name]\nFROM\n    OPENROWSET(\n        BULK 'https://mydatalakename.dfs.core.windows.net/rawdata/MockJSONData/MOCK_DATA-SingleObjectWithNestedArray.json',\n        FORMAT = 'CSV',\n        FIELDQUOTE = '0x0b',\n        FIELDTERMINATOR ='0x0b',\n        ROWTERMINATOR = '0x0b'\n    )\n    WITH(\n        [jsonContent] varchar(MAX) /*This now contains the full JSON document from the file. Note the datatype is varchar(MAX).*/\n    ) AS [result]\nCROSS APPLY OPENJSON \n    /*Use JSON_QUERY here because we are querying a nested array, so we cant use JSON_VALUE.\n    We perform JSON_QUERY on the [result].[JSONDocument] field since that is the column with the full JSON Document we want to extract dat from. \n    The path to the attribute is using the normal path to the attribute name that contains the array */\n    (JSON_QUERY([jsonContent], '$.attribute_with_nested_array')) /*Note, if you want only the top most record from this array, replace this line with \"(JSON_QUERY([jsonContent], '$.attribute_with_nested_array[0]'))\"*/\nWITH(\n    [nested_record_id] varchar(255) '$.nested_record_id',\n    [nested_record_Name] varchar(255) '$.nested_record_Name'\n) AS [NestedArray]\n\n\n\nSELECT TOP 100\n    *\nfrom openrowset(\n        bulk 'data/data.json',\n        data_source = 'FrostRAW',\n        format = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b'\n    ) \n    WITH(\n        [jsonContent] varchar(MAX) /*This now contains the full JSON document from the file. Note the datatype is varchar(MAX).*/\n    ) AS [result]\nCROSS APPLY OPENJSON \n    /*Use JSON_QUERY here because we are querying a nested array, so we cant use JSON_VALUE.\n    We perform JSON_QUERY on the [result].[JSONDocument] field since that is the column with the full JSON Document we want to extract dat from. \n    The path to the attribute is using the normal path to the attribute name that contains the array */\n    (JSON_QUERY([jsonContent], '$.data')) /*Note, if you want only the top most record from this array, replace this line with \"(JSON_QUERY([jsonContent], '$.attribute_with_nested_array[0]'))\"*/\nWITH(\n    [nested_record_id] varchar(255) '$.sourceId',\n    [nested_record_Name] varchar(255) '$.referenceTime'\n) AS [NestedArray]\n\n\nselect\n    sourceId, referenceTime\nfrom openrowset(\n        bulk 'https://dlsingraphic01.blob.core.windows.net/raw/data/data_test1.json',\n        format = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) with (doc nvarchar(max)) as rows\n    cross apply openjson (doc, N'lax $.data')\n    WITH ( \n        sourceId varchar(20),   \n        referenceTime datetime\n )  ;\n\nalter view [dbo].[FrostData] as\nselect * \nfrom openrowset(\n        bulk 'https://dlsingraphic01.blob.core.windows.net/business/2023-03/2023-03-30/*', \n        format = 'parquet'\n        ) as rows\n\n\n\ndeclare @json nvarchar(max)\nset @json = '\n[\n   {\n      \"IdProject\":\"97A76363-095D-4FAB-940E-9ED2722DBC47\",\n      \"Name\":\"Test Project\",\n      \"structures\":[\n         {\n            \"IdStructure\":\"CB0466F9-662F-412B-956A-7D164B5D358F\",\n            \"IdProject\":\"97A76363-095D-4FAB-940E-9ED2722DBC47\",\n            \"Name\":\"Test Structure\",\n            \"BaseStructure\":\"Base Structure\",\n            \"DatabaseSchema\":\"dbo\",\n            \"properties\":[\n               {\n                  \"IdProperty\":\"618DC40B-4D04-4BF8-B1E6-12E13DDE86F4\",\n                  \"IdStructure\":\"CB0466F9-662F-412B-956A-7D164B5D358F\",\n                  \"Name\":\"Test Property 2\",\n                  \"DataType\":1,\n                  \"Precision\":0,\n                  \"Scale\":0,\n                  \"IsNullable\":false,\n                  \"ObjectName\":\"Test Object\",\n                  \"DefaultType\":1,\n                  \"DefaultValue\":\"\"\n               },\n               {\n                  \"IdProperty\":\"FFF433EC-0BB5-41CD-8A71-B5F09B97C5FC\",\n                  \"IdStructure\":\"CB0466F9-662F-412B-956A-7D164B5D358F\",\n                  \"Name\":\"Test Property 1\",\n                  \"DataType\":1,\n                  \"Precision\":0,\n                  \"Scale\":0,\n                  \"IsNullable\":false,\n                  \"ObjectName\":\"Test Object\",\n                  \"DefaultType\":1,\n                  \"DefaultValue\":\"\"\n               }\n            ]\n         }\n      ]\n   }\n]';\n\nselect\n    Projects.IdProject, Projects.Name as NameProject,\n    Structures.IdStructure, Structures.Name as NameStructure, Structures.BaseStructure, Structures.DatabaseSchema,\n    Properties.*    \nfrom   openjson (@json)\nwith\n(\n    IdProject uniqueidentifier,\n    Name nvarchar(100),\n    structures nvarchar(max) as json\n)\nas Projects\ncross apply openjson (Projects.structures)\nwith\n(\n    IdStructure uniqueidentifier,\n    Name nvarchar(100),\n    BaseStructure nvarchar(100),\n    DatabaseSchema sysname,\n    properties nvarchar(max) as json\n) as Structures\ncross apply openjson (Structures.properties)\nwith\n(\n    IdProperty uniqueidentifier,\n    NamePreoperty nvarchar(100) '$.Name',\n    DataType int,\n    [Precision] int,\n    [Scale] int,\n    IsNullable bit,\n    ObjectName nvarchar(100),\n    DefaultType int,\n    DefaultValue nvarchar(100)\n)\nas Properties",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}